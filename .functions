# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

# find shorthand
function f() {
    find . -name "$1" 2>&1 | grep -v 'Permission denied'
}

# cd into whatever is the forefront Finder window.
cdf() {  # short for cdfinder
  cd "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

push() {
  # Get the current branch name
  local branch_name=$(git symbolic-ref --short HEAD)

  git pull origin $branch_name
  git push origin -u $branch_name
}

pull() {
  # Get the current branch name
  local branch_name=$(git symbolic-ref --short HEAD)

  git pull origin $branch_name
  yarn
}

# Common and useful commandline functions

# Function to create a new directory and navigate into it
function mkcd() {
  mkdir -p "$1" && cd "$1"
}

# Function to extract various archive types
function extract() {
  if [ -f "$1" ]; then
    case "$1" in
      *.tar.bz2)   tar xjf "$1"   ;;
      *.tar.gz)    tar xzf "$1"   ;;
      *.bz2)       bunzip2 "$1"   ;;
      *.rar)       unrar x "$1"   ;;
      *.gz)        gunzip "$1"    ;;
      *.tar)       tar xf "$1"    ;;
      *.tbz2)      tar xjf "$1"   ;;
      *.tgz)       tar xzf "$1"   ;;
      *.zip)       unzip "$1"     ;;
      *.Z)         uncompress "$1";;
      *.7z)        7z x "$1"      ;;
      *)           echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Function to find files by name
function f() {
  find . -name "$1"
}

# Function to get the size of a directory
function dsize() {
  du -sh "$1"
}

# Function to show the top 10 largest files in the current directory
function largest_files() {
  find . -type f -exec du -h {} + | sort -rh | head -n 10
}

# Function to show the top 10 largest directories in the current directory
function largest_dirs() {
  du -h --max-depth=1 | sort -rh | head -n 10
}

# Function to search for a pattern in files
function search() {
  grep -rnw . -e "$1"
}

# Function to display the current git branch in the prompt
function parse_git_branch() {
  git branch 2>/dev/null | sed -n '/\* /s///p'
}

# Function to quickly navigate to a directory
function cdd() {
  cd "$1" || echo "Directory not found: $1"
}
